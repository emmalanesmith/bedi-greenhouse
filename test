/*
questions:
- magic numbers for conversion from ms to hours, are we ok w that

notes:
variables bellow must be set as pass by reference, but will remain constant after being changed once
in this code, using newHour and newMinute as placeholder for the new generated time (store in settings[] if it works)

int hour = 0;
int minute = 0;
string period = "a.m.";
*/

const int WAIT_MESSAGE = 2500; // wait time between messages

void setStartTime(float hour, float minute, float period)
{

	// prompt user
	displayTextLine(3, "Please enter the current time:");
	wait1Msec(WAIT_MESSAGE);
	displayTextLine(3, "Use up/down arrows change #s");
	displayTextLine(4, "Use enter to go next");
	wait1Msec(WAIT_MESSAGE);
	displayTextLine(3, "Please enter the current time:");

	// generate time as user changes it
	int timeSet = 0;
	/*
		setTime = 0; Change hours
		setTime = 1; Change minutes
		setTime = 2; Change period (a.m./p.m.)
	*/
	
	string periodDisplay = "a.m.";
	
	while (timeSet != 2)
	{
		// generate updated time after toggling
		if (minute< 10) displayTextLine(4, "%d:0%d %s", hour, minute, periodDisplay);
		else displayTextLine(4, "%d:%d %s", hour, minute, periodDisplay);

		// toggle settings
		while(!getButtonPress(buttonAny))
		{}
		if (getButtonPress(buttonDown))
		{
			if (timeSet == 0 && hour>1) hour--;
			else if (timeSet == 1 && minute>0) minute--;
		}
		else if (getButtonPress(buttonUp))
		{
			if (timeSet == 0 && hour < 12) hour++;
			else if (timeSet == 1 && minute < 59) minute++;
		}
		else if (getButtonPress(buttonEnter))timeSet++;
		wait1Msec(500);
	}

	while (timeSet == 2)
	{
		while(!getButtonPress(buttonAny))
		{}
		if (getButtonPress(buttonUp) || getButtonPress(buttonDown))
		{
			if (period == 0) period = 1;
			else period = 0;
		}

		string periodDisplay = " ";
		if (period == 0) periodDisplay = "a.m.";
		else periodDisplay = "p.m.";
		// generate updated time after toggling
		if (minute< 10) displayTextLine(4, "%d:0%d %s", hour, minute, periodDisplay);
		else displayTextLine(4, "%d:%d %s", hour, minute, periodDisplay);

		if (getButtonPress(buttonEnter)) timeSet = 3;

		wait1Msec(500);
	}
}

void generateStats(string plantName, float timeWater, float timeRotation, float day, float month, float year, float hour, float minute, float period, float newHour, float newMinute)
{
	float runTime = time1[T1];

	int daysInMonth[12] = {31, 28, 31, 30, 31, 30, 31 ,31 ,30, 31, 30, 31}; // index corresponds to month-1

	// calculations for number of water cycle and rotations
	int numWaterCycles = runTime / timeWater;
	int numRotations = runTime / timeRotation;

	//Calculating current time and date
	if (period == 1) hour += 12;

	// counting total number of full days, sets correct month and day
	newMinute = runTime/1000/60 + minute; // total minutes
	newHour = (newMinute/60) + hour; // total hours
	newMinute -= ((newMinute/60)*60); // final number of minutes
	day += (newHour/24); // total days
	wait1Msec(10000);
	newHour -= ((newHour/24)*24);// final number of hours

	wait1Msec(10000);

	// changing a.m./p.m.
	if (newHour >= 0 && newHour <= 11)
	{
		period = 0;
	}
	else if (newHour >= 12)
	{
		period = 1;
	}

	// convert from 24h to 12h clock
	if (newHour == 0) newHour = 12;
	if (newHour > 12) newHour -= 12;

	else period = 0;
	bool correctDate = false;
	while (!correctDate)
	{
		if (day > daysInMonth[month-1])
		{
			day -= daysInMonth[month-1];
			month++;
		}
		if (month > 12)
		{
			year++;
			month = 1;
		}

		if (day <= daysInMonth[month-1] && month <= 12) correctDate = true;
	}


	// display stats
	displayTextLine(4, "Plant name: %s", plantName);
	wait1Msec(WAIT_MESSAGE);
	displayTextLine(4, "Total run time in milliseconds: %d", runTime);
	wait1Msec(WAIT_MESSAGE);
	displayTextLine(4, "Number of water cycles: %d", numWaterCycles);
	wait1Msec(WAIT_MESSAGE);
	displayTextLine(4, "Number of rotations: %d", numRotations);
	wait1Msec(WAIT_MESSAGE);

	// correct display of date
	if (month<10) displayTextLine(4, "%d/0%d/%d", month, day, year);
	else displayTextLine(4, "%d/%d/%d", month, day, year);
	wait1Msec(WAIT_MESSAGE);

	// correct display of time
	string periodDisplay = " ";
	if (period == 0) periodDisplay = "a.m.";
	else periodDisplay = "p.m.";
	if (newMinute < 10) displayTextLine(4, "%d:0%d %s", newHour, newMinute, periodDisplay);
	else displayTextLine(4, "%d:%d %s", newHour, periodDisplay);
	wait1Msec(WAIT_MESSAGE);

}

task main()
{
	time1[T1] = 0;
	string plantName = "nfosi";
	float settings[10] = {0.0, 0.0, 0, 0, 0, 0, 0, 0, 0, 0};
	float hour = 0, minute = 0, period = 0;
	setStartTime(hour, minute, period);
	displayTextLine(1, "HERE");
	
	float timeWater = 100;
	float timeRotation = 100;
	float day = 1;
	float month = 2;
	float year = 2006;
	float newHour = 0;
	float newMinute = 0;
	
	generateStats(plantName, timeWater, timeRotation, day, month, year, hour, minute, period, newHour, newMinute);

}
